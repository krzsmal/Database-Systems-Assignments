-- Task 1:
CREATE VIEW ASYSTENCI (NAZWISKO, PLACA, STAZ) AS 
SELECT NAZWISKO, PLACA_POD+NVL(PLACA_DOD, 0) AS PLACA, (TO_DATE(CONCAT(EXTRACT(YEAR FROM CURRENT_DATE), '-01-01'),'YYYY-MM-DD') - ZATRUDNIONY) YEAR TO MONTH AS STAZ FROM PRACOWNICY;

-- Task 2:
CREATE VIEW PLACE (ID_ZESP, SREDNIA, MINIMUM, MAXIMUM, FUNDUSZ, L_PENSJI, L_DODATKOW) AS 
SELECT ID_ZESP,
ROUND(AVG(PLACA_POD+NVL(PLACA_DOD, 0)), 2) AS SREDNIA,
MIN(PLACA_POD+NVL(PLACA_DOD, 0)) AS MINIMUM,
MAX(PLACA_POD+NVL(PLACA_DOD, 0)) AS MAXIMUM,
SUM(PLACA_POD+NVL(PLACA_DOD, 0)) AS FUNDUSZ, 
COUNT(PLACA_POD) AS L_PENSJI,
COUNT(PLACA_DOD) AS L_DODATKOW
FROM PRACOWNICY GROUP BY ID_ZESP;

-- Task 3:
SELECT NAZWISKO, PLACA_POD FROM PRACOWNICY
JOIN PLACE USING (ID_ZESP)
WHERE PLACA_POD+NVL(PLACA_DOD, 0) < SREDNIA;

-- Task 4:
CREATE VIEW PLACE_MINIMALNE (ID_PRAC, NAZWISKO, ETAT, PLACA_POD) AS 
SELECT ID_PRAC, NAZWISKO, ETAT, PLACA_POD FROM PRACOWNICY
WHERE PLACA_POD < 700 WITH CHECK OPTION;

-- Task 5:
UPDATE PLACE_MINIMALNE
SET PLACA_POD = 800
WHERE UPPER(NAZWISKO) = 'HAPKE';

-- Task 6:
CREATE VIEW PRAC_SZEF (ID_PRAC, ID_SZEFA, PRACOWNIK, ETAT, SZEF) AS
SELECT P1.ID_PRAC, P1.ID_SZEFA, P1.NAZWISKO AS PRACOWNIK, P1.ETAT, P2.NAZWISKO FROM PRACOWNICY P1 
LEFT JOIN PRACOWNICY P2 ON P1.ID_SZEFA = P2.ID_PRAC ORDER BY P1.NAZWISKO;

-- Task 7:
CREATE VIEW ZAROBKI (ID_PRAC, NAZWISKO, ETAT, PLACA_POD) AS 
SELECT ID_PRAC, NAZWISKO, ETAT, PLACA_POD FROM PRACOWNICY P1
WHERE PLACA_POD <= (SELECT PLACA_POD FROM PRACOWNICY WHERE ID_PRAC=P1.ID_SZEFA) WITH CHECK OPTION;

-- Task 8:
SELECT column_name, updatable, insertable, deletable
FROM user_updatable_columns
WHERE table_name = 'PRAC_SZEF';