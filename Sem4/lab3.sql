-- Task 1:
SELECT MIN(PLACA_POD) as MINIMUM, MAX(PLACA_POD) as MAKSIMUM, MAX(PLACA_POD)-MIN(PLACA_POD) as RÓŻNICA from PRACOWNICY;

-- Task 2:
SELECT ETAT, AVG(PLACA_POD) as SREDNIA FROM PRACOWNICY GROUP BY ETAT;

-- Task 3:
SELECT COUNT(ETAT) as PROFESOROWIE FROM PRACOWNICY WHERE ETAT='PROFESOR';

-- Task 4:
SELECT ID_ZESP, SUM(PLACA_POD)+SUM(PLACA_DOD) as SUMARYCZNE_PLACE FROM PRACOWNICY GROUP BY ID_ZESP ORDER BY ID_ZESP;

-- Task 5:
SELECT MAX(SUM(PLACA_POD)+SUM(PLACA_DOD)) as MAKS_SUM_PLACA FROM PRACOWNICY GROUP BY ID_ZESP ORDER BY ID_ZESP;

-- Task 6:
SELECT ID_SZEFA, MIN(PLACA_POD) as MINIMALNA FROM PRACOWNICY WHERE ID_SZEFA IS NOT NULL GROUP BY ID_SZEFA ORDER BY MIN(PLACA_POD) DESC;

-- Task 7:
SELECT ID_ZESP, COUNT(ID_ZESP) as ILU_PRACUJE FROM PRACOWNICY GROUP BY ID_ZESP ORDER BY COUNT(ID_ZESP) DESC;

-- Task 8:
SELECT ID_ZESP, COUNT(ID_ZESP) as ILU_PRACUJE FROM PRACOWNICY GROUP BY ID_ZESP HAVING COUNT(ID_ZESP) > 3 ORDER BY COUNT(ID_ZESP) DESC;

-- Task 9:
SELECT ID_PRAC, COUNT(ID_PRAC) FROM PRACOWNICY GROUP BY ID_PRAC HAVING COUNT(ID_PRAC) = 2;

-- Task 10:
SELECT ETAT, AVG(PLACA_POD) as ŚREDNIA, COUNT(ETAT) as LICZBA FROM PRACOWNICY WHERE EXTRACT(YEAR FROM ZATRUDNIONY) <= 1990  GROUP BY ETAT;

-- Task 11:
SELECT ID_ZESP, ETAT, ROUND(AVG(PLACA_POD+NVL(PLACA_DOD, 0)), 0) AS SREDNIA, ROUND(MAX(PLACA_POD+NVL(PLACA_DOD, 0)), 0) AS MAKSYMALNA FROM PRACOWNICY WHERE ETAT IN ('ASYSTENT', 'PROFESOR') GROUP BY ID_ZESP, ETAT ORDER BY ID_ZESP, ETAT;

-- Task 12:
SELECT EXTRACT(YEAR FROM ZATRUDNIONY) AS ROK, COUNT(EXTRACT(YEAR FROM ZATRUDNIONY)) AS ILU_PRACOWNIKOW FROM PRACOWNICY GROUP BY EXTRACT(YEAR FROM ZATRUDNIONY) ORDER BY EXTRACT(YEAR FROM ZATRUDNIONY);

-- Task 13:
SELECT LENGTH(NAZWISKO) AS "Ile liter", COUNT(LENGTH(NAZWISKO)) AS "W ilu nazwiskach" FROM PRACOWNICY GROUP BY LENGTH(NAZWISKO) ORDER BY LENGTH(NAZWISKO);

-- Task 14:
SELECT COUNT(NAZWISKO) AS "Ile nazwisko z A" FROM PRACOWNICY WHERE NAZWISKO LIKE '%A%' OR NAZWISKO LIKE '%a%';

-- Task 15:
SELECT
    SUM(case when (UPPER(NAZWISKO) LIKE '%A%') then 1 else 0 end) AS "Ile nazwisko z A",
    SUM(case when (UPPER(NAZWISKO) LIKE '%E%') then 1 else 0 end) AS "Ile nazwisko z E"
FROM PRACOWNICY;

-- Task 16:
SELECT ID_ZESP, SUM(PLACA_POD) AS SUMA_PLAC, LISTAGG((NAZWISKO || ':' || PLACA_POD), ';')
WITHIN GROUP (ORDER BY nazwisko) AS PRACOWNICY FROM PRACOWNICY GROUP BY ID_ZESP ORDER BY ID_ZESP;